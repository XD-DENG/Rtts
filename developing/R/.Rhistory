content="xiaodong"
speaker="Bruce"
volume=100
speed=0
outType="wav"
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/ConvertText")
body_1 <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<ConvertText>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<TTStext>'
body_2 <- '</TTStext>
<TTSSpeaker>'
body_3 <- '</TTSSpeaker>
<volume>'
body_4 <- '</volume>
<speed>'
body_5 <- '</speed>
<outType>'
body_6 <- '</outType>
</ConvertText>
</soap:Body>
</soap:Envelope>'
body <- paste(body_1, content, body_2, speaker,
body_3, volume, body_4, speed, body_5,
outType, body_6, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_ID_raw <- reader$value()
library(RCurl)
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/ConvertText")
body_1 <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<ConvertText>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<TTStext>'
body_2 <- '</TTStext>
<TTSSpeaker>'
body_3 <- '</TTSSpeaker>
<volume>'
body_4 <- '</volume>
<speed>'
body_5 <- '</speed>
<outType>'
body_6 <- '</outType>
</ConvertText>
</soap:Body>
</soap:Envelope>'
body <- paste(body_1, content, body_2, speaker,
body_3, volume, body_4, speed, body_5,
outType, body_6, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_ID_raw <- reader$value()
voice_ID_raw
source('~/Rtts/developing/R/tts_ITRI_getURL.R')
tts_ITRI_getURL(408037)
speed=-5
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/ConvertText")
body_1 <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<ConvertText>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<TTStext>'
body_2 <- '</TTStext>
<TTSSpeaker>'
body_3 <- '</TTSSpeaker>
<volume>'
body_4 <- '</volume>
<speed>'
body_5 <- '</speed>
<outType>'
body_6 <- '</outType>
</ConvertText>
</soap:Body>
</soap:Envelope>'
body <- paste(body_1, content, body_2, speaker,
body_3, volume, body_4, speed, body_5,
outType, body_6, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_ID_raw <- reader$value()
voice_ID_raw
tts_ITRI_getURL(408054)
speaker="Angela"
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/ConvertText")
body_1 <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<ConvertText>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<TTStext>'
body_2 <- '</TTStext>
<TTSSpeaker>'
body_3 <- '</TTSSpeaker>
<volume>'
body_4 <- '</volume>
<speed>'
body_5 <- '</speed>
<outType>'
body_6 <- '</outType>
</ConvertText>
</soap:Body>
</soap:Envelope>'
body <- paste(body_1, content, body_2, speaker,
body_3, volume, body_4, speed, body_5,
outType, body_6, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_ID_raw <- reader$value()
voice_ID_raw
tts_ITRI_getURL(408065)
speed
speed=-10
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/ConvertText")
body_1 <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<ConvertText>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<TTStext>'
body_2 <- '</TTStext>
<TTSSpeaker>'
body_3 <- '</TTSSpeaker>
<volume>'
body_4 <- '</volume>
<speed>'
body_5 <- '</speed>
<outType>'
body_6 <- '</outType>
</ConvertText>
</soap:Body>
</soap:Envelope>'
body <- paste(body_1, content, body_2, speaker,
body_3, volume, body_4, speed, body_5,
outType, body_6, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_ID_raw <- reader$value()
voice_ID_raw
tts_ITRI_getURL(408071)
voice_ID <- strsplit(strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = 'string\">')[[1]][2], split=";")[[1]][3]
voice_ID
voice_ID <- strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '$amp;">')[[1]][3]
voice_ID
voice_ID_raw
strsplit(voice_ID_raw, split="</Result>")[[1]][1]
strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '$amp;">')
strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '$amp;>')
strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '$amp;')
strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '&amp;')
voice_ID <- strsplit(strsplit(voice_ID_raw, split="</Result>")[[1]][1], split = '&amp;')[[1]][3]
voice_ID
source('~/Rtts/developing/R/NEW_tts_ITRI_getID.R')
tts_ITRI_getID("comment", "Bruce",100, 0, "wav")
tts_ITRI_getID("comment", "bruce",100, 0, "wav")
tts_ITRI_getID("comment", "Bruce",100, 0, "wav")
tts_ITRI_getID("comment", "Bruce",101, 0, "wav")
tts_ITRI_getID("comment", "Bruce",100, 0, "wav")
tts_ITRI_getID("comment", "Bruce",100, 11, "wav")
tts_ITRI_getID("comment", "Bruce",100, 10, "wav")
tts_ITRI_getID("comment", "Bruce",100, 9.5, "wav")
tts_ITRI_getID("comment", "Bruce",100, 4.5, "wav")
tts_ITRI_getID("comment", "Bruce",100, 4.5555, "wav")
tts_ITRI_getID("comment", "Bruce",100, -10, "wav")
tts_ITRI_getID("comment", "Bruce",100, -10.1, "wav")
tts_ITRI_getID("comment", "Bruce",100, -10.9, "wav")
tts_ITRI_getID("comment", "Bruce",100, -11, "wav")
tts_ITRI_getID("comment", "Bruce",100, -1, "wav")
tts_ITRI_getID("comment", "Bruce",100, 0, "flv")
tts_ITRI_getID("comment", "Bruce",100, 0, "flvv")
tts_ITRI_getID("comment", "Bruce",100, 0, "wav")
source('~/Rtts/developing/R/NEW_tts_ITRI_getID.R')
source('~/Rtts/developing/R/tts_ITRI_getStatus.R')
source('~/Rtts/developing/R/tts_ITRI_getURL.R')
source('~/Rtts/developing/R/NEW_tts_ITRI.R')
tts_ITRI("where are you")
source('~/Rtts/developing/R/NEW_tts_ITRI.R')
tts_ITRI("where are you")
source('~/Rtts/developing/R/NEW_tts_ITRI_getID.R')
tts_ITRI("where are you")
tts_ITRI("where are you",speed = 10)
tts_ITRI("where are you",speaker = "Angela",speed = 0)
