library(RCurl)
source('~/Rtts/developing/tts_ITRI.R')
source('~/Rtts/developing/tts_ITRI_getURL.R')
source('~/Rtts/developing/tts_ITRI_getID.R')
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("Good morning")
tts_ITRI("Good morning")
tts_ITRI_getID("hi, how are you")
tts_ITRI_getURL(402524)
content="hi where are you"
tmp_url <- tts_ITRI_getURL(tts_ITRI_getID(content))
tmtmp_url
tmp_url
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("Hi good morning how are you")
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("Hi good morning how are you")
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("Hi good morning how are you")
voice_ID=402524
headerFields <-
c(Accept = "text/xml",
Accept = "multipart/*",
'Content-Type' = "text/xml; charset=utf-8",
SOAPAction = "http://tts.itri.org.tw/TTSService/GetConvertStatus")
body_head <- '<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
<GetConvertStatus>
<accountID>test-for-r</accountID>
<password>test1for1r</password>
<convertID>'
body_tail <- '</convertID>
</GetConvertStatus>
</soap:Body>
</soap:Envelope>'
body <- paste(body_head, voice_ID, body_tail, sep="")
# we want the actual body of the response from the web server.
# To get this, we provide function basicTextGatherer() to collect the text.
reader =  basicTextGatherer()
curlPerform(url = "http://tts.itri.org.tw/TTSService/Soap_1_3.php?wsdl",
httpheader = headerFields,
postfields = body,
verbose = FALSE,
writefunction = reader$update
)
voice_URL_raw <- reader$value()
voice_URL_raw
source('~/Rtts/developing/tts_ITRI_getStatus.R')
tts_ITRI_getStatus(402524)
source('~/Rtts/developing/tts_ITRI_getStatus.R')
tts_ITRI_getStatus(402524)
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("Hi how are you where are you? are you okay?")
tts_ITRI("These functions create callback functions that can be used to with the libcurl engine when it passes information to us when it is available as part of the HTTP response.")
source('~/Rtts/developing/tts_ITRI.R')
source('~/Rtts/developing/tts_ITRI.R')
tts_ITRI("These functions create callback functions that can be used to with the libcurl engine when it passes information to us when it is available as part of the HTTP response.basicTextGatherer is a generator function that returns a closure which is used to cumulate text provided in callbacks from the libcurl engine when it reads the response from an HTTP request.")
